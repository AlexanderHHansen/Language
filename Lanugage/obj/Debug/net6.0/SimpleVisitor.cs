//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\ax111\Documents\PersonalDocuments\Coding\C#\Language\Lanugage\Content\Simple.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Lanugage.Content {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SimpleParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ISimpleVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>constExp</c>
	/// labeled alternative in <see cref="SimpleParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstExp([NotNull] SimpleParser.ConstExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>idExp</c>
	/// labeled alternative in <see cref="SimpleParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdExp([NotNull] SimpleParser.IdExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenExp</c>
	/// labeled alternative in <see cref="SimpleParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExp([NotNull] SimpleParser.ParenExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>addExp</c>
	/// labeled alternative in <see cref="SimpleParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExp([NotNull] SimpleParser.AddExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>cmpExp</c>
	/// labeled alternative in <see cref="SimpleParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpExp([NotNull] SimpleParser.CmpExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>binOpExp</c>
	/// labeled alternative in <see cref="SimpleParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinOpExp([NotNull] SimpleParser.BinOpExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>notExp</c>
	/// labeled alternative in <see cref="SimpleParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExp([NotNull] SimpleParser.NotExpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] SimpleParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.statementOrNewline"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementOrNewline([NotNull] SimpleParser.StatementOrNewlineContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] SimpleParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoop([NotNull] SimpleParser.LoopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.whileLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileLoop([NotNull] SimpleParser.WhileLoopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrint([NotNull] SimpleParser.PrintContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] SimpleParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.cmpOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpOp([NotNull] SimpleParser.CmpOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.binaryBoolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryBoolOp([NotNull] SimpleParser.BinaryBoolOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOp([NotNull] SimpleParser.AddOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOp([NotNull] SimpleParser.MultOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.atomExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomExp([NotNull] SimpleParser.AtomExpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] SimpleParser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] SimpleParser.ConstantContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] SimpleParser.TypeContext context);
}
} // namespace Lanugage.Content
