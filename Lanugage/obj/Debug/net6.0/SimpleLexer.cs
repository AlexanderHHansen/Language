//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\ax111\Documents\PersonalDocuments\Coding\C#\Language\Lanugage\Content\Simple.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Lanugage.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SimpleLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, NEWLINE=7, WHILE=8, LBRACKET=9, 
		RBRACKET=10, PRINT=11, LPAREN=12, RPAREN=13, AND=14, OR=15, NOT=16, ARITHMETIC=17, 
		ASSIGN=18, INT=19, FLOAT=20, BOOL=21, STRING=22, NULL=23, INT_TYPE=24, 
		FLOAT_TYPE=25, BOOL_TYPE=26, STRING_TYPE=27, ID=28, WS=29;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "NEWLINE", "WHILE", "LBRACKET", 
		"RBRACKET", "PRINT", "LPAREN", "RPAREN", "AND", "OR", "NOT", "ARITHMETIC", 
		"ASSIGN", "INT", "FLOAT", "BOOL", "STRING", "NULL", "INT_TYPE", "FLOAT_TYPE", 
		"BOOL_TYPE", "STRING_TYPE", "ID", "WS"
	};


	public SimpleLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'=='", "'!='", "'<'", "'>'", "'>='", "'<='", null, "'while'", "'{'", 
		"'}'", "'print'", "'('", "')'", "'and'", "'or'", "'!'", null, "'='", null, 
		null, null, null, "'null'", "'int'", "'float'", "'bool'", "'string'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, "NEWLINE", "WHILE", "LBRACKET", 
		"RBRACKET", "PRINT", "LPAREN", "RPAREN", "AND", "OR", "NOT", "ARITHMETIC", 
		"ASSIGN", "INT", "FLOAT", "BOOL", "STRING", "NULL", "INT_TYPE", "FLOAT_TYPE", 
		"BOOL_TYPE", "STRING_TYPE", "ID", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Simple.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1F\xBC\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x3\x2\x3\x2\x3\x2"+
		"\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\a\x3\a"+
		"\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f"+
		"\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14"+
		"\x6\x14r\n\x14\r\x14\xE\x14s\x3\x15\x6\x15w\n\x15\r\x15\xE\x15x\x3\x15"+
		"\x3\x15\x6\x15}\n\x15\r\x15\xE\x15~\x5\x15\x81\n\x15\x3\x16\x3\x16\x3"+
		"\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x5\x16\x8C\n\x16\x3\x17"+
		"\x3\x17\a\x17\x90\n\x17\f\x17\xE\x17\x93\v\x17\x3\x17\x3\x17\x3\x18\x3"+
		"\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\a\x1D\xB4\n\x1D"+
		"\f\x1D\xE\x1D\xB7\v\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x2\x2\x2\x1F\x3\x2"+
		"\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F\x3\x2\a\x4\x2\f\f\xF\xF\x5\x2"+
		",-//\x31\x31\x6\x2\f\f\xF\xF$$^^\x5\x2\x43\\\x61\x61\x63|\x4\x2\v\v\""+
		"\"\xC2\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2"+
		"\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2"+
		"\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19"+
		"\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2"+
		"\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)"+
		"\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3"+
		"\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2"+
		"\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x3=\x3\x2\x2\x2\x5@\x3\x2\x2\x2\a\x43"+
		"\x3\x2\x2\x2\t\x45\x3\x2\x2\x2\vG\x3\x2\x2\x2\rJ\x3\x2\x2\x2\xFM\x3\x2"+
		"\x2\x2\x11O\x3\x2\x2\x2\x13U\x3\x2\x2\x2\x15W\x3\x2\x2\x2\x17Y\x3\x2\x2"+
		"\x2\x19_\x3\x2\x2\x2\x1B\x61\x3\x2\x2\x2\x1D\x63\x3\x2\x2\x2\x1Fg\x3\x2"+
		"\x2\x2!j\x3\x2\x2\x2#l\x3\x2\x2\x2%n\x3\x2\x2\x2\'q\x3\x2\x2\x2)v\x3\x2"+
		"\x2\x2+\x8B\x3\x2\x2\x2-\x8D\x3\x2\x2\x2/\x96\x3\x2\x2\x2\x31\x9B\x3\x2"+
		"\x2\x2\x33\x9F\x3\x2\x2\x2\x35\xA5\x3\x2\x2\x2\x37\xAA\x3\x2\x2\x2\x39"+
		"\xB1\x3\x2\x2\x2;\xB8\x3\x2\x2\x2=>\a?\x2\x2>?\a?\x2\x2?\x4\x3\x2\x2\x2"+
		"@\x41\a#\x2\x2\x41\x42\a?\x2\x2\x42\x6\x3\x2\x2\x2\x43\x44\a>\x2\x2\x44"+
		"\b\x3\x2\x2\x2\x45\x46\a@\x2\x2\x46\n\x3\x2\x2\x2GH\a@\x2\x2HI\a?\x2\x2"+
		"I\f\x3\x2\x2\x2JK\a>\x2\x2KL\a?\x2\x2L\xE\x3\x2\x2\x2MN\t\x2\x2\x2N\x10"+
		"\x3\x2\x2\x2OP\ay\x2\x2PQ\aj\x2\x2QR\ak\x2\x2RS\an\x2\x2ST\ag\x2\x2T\x12"+
		"\x3\x2\x2\x2UV\a}\x2\x2V\x14\x3\x2\x2\x2WX\a\x7F\x2\x2X\x16\x3\x2\x2\x2"+
		"YZ\ar\x2\x2Z[\at\x2\x2[\\\ak\x2\x2\\]\ap\x2\x2]^\av\x2\x2^\x18\x3\x2\x2"+
		"\x2_`\a*\x2\x2`\x1A\x3\x2\x2\x2\x61\x62\a+\x2\x2\x62\x1C\x3\x2\x2\x2\x63"+
		"\x64\a\x63\x2\x2\x64\x65\ap\x2\x2\x65\x66\a\x66\x2\x2\x66\x1E\x3\x2\x2"+
		"\x2gh\aq\x2\x2hi\at\x2\x2i \x3\x2\x2\x2jk\a#\x2\x2k\"\x3\x2\x2\x2lm\t"+
		"\x3\x2\x2m$\x3\x2\x2\x2no\a?\x2\x2o&\x3\x2\x2\x2pr\x4\x32;\x2qp\x3\x2"+
		"\x2\x2rs\x3\x2\x2\x2sq\x3\x2\x2\x2st\x3\x2\x2\x2t(\x3\x2\x2\x2uw\x4\x32"+
		";\x2vu\x3\x2\x2\x2wx\x3\x2\x2\x2xv\x3\x2\x2\x2xy\x3\x2\x2\x2y\x80\x3\x2"+
		"\x2\x2z|\a\x30\x2\x2{}\x4\x32;\x2|{\x3\x2\x2\x2}~\x3\x2\x2\x2~|\x3\x2"+
		"\x2\x2~\x7F\x3\x2\x2\x2\x7F\x81\x3\x2\x2\x2\x80z\x3\x2\x2\x2\x80\x81\x3"+
		"\x2\x2\x2\x81*\x3\x2\x2\x2\x82\x83\av\x2\x2\x83\x84\at\x2\x2\x84\x85\a"+
		"w\x2\x2\x85\x8C\ag\x2\x2\x86\x87\ah\x2\x2\x87\x88\a\x63\x2\x2\x88\x89"+
		"\an\x2\x2\x89\x8A\au\x2\x2\x8A\x8C\ag\x2\x2\x8B\x82\x3\x2\x2\x2\x8B\x86"+
		"\x3\x2\x2\x2\x8C,\x3\x2\x2\x2\x8D\x91\a$\x2\x2\x8E\x90\n\x4\x2\x2\x8F"+
		"\x8E\x3\x2\x2\x2\x90\x93\x3\x2\x2\x2\x91\x8F\x3\x2\x2\x2\x91\x92\x3\x2"+
		"\x2\x2\x92\x94\x3\x2\x2\x2\x93\x91\x3\x2\x2\x2\x94\x95\a$\x2\x2\x95.\x3"+
		"\x2\x2\x2\x96\x97\ap\x2\x2\x97\x98\aw\x2\x2\x98\x99\an\x2\x2\x99\x9A\a"+
		"n\x2\x2\x9A\x30\x3\x2\x2\x2\x9B\x9C\ak\x2\x2\x9C\x9D\ap\x2\x2\x9D\x9E"+
		"\av\x2\x2\x9E\x32\x3\x2\x2\x2\x9F\xA0\ah\x2\x2\xA0\xA1\an\x2\x2\xA1\xA2"+
		"\aq\x2\x2\xA2\xA3\a\x63\x2\x2\xA3\xA4\av\x2\x2\xA4\x34\x3\x2\x2\x2\xA5"+
		"\xA6\a\x64\x2\x2\xA6\xA7\aq\x2\x2\xA7\xA8\aq\x2\x2\xA8\xA9\an\x2\x2\xA9"+
		"\x36\x3\x2\x2\x2\xAA\xAB\au\x2\x2\xAB\xAC\av\x2\x2\xAC\xAD\at\x2\x2\xAD"+
		"\xAE\ak\x2\x2\xAE\xAF\ap\x2\x2\xAF\xB0\ai\x2\x2\xB0\x38\x3\x2\x2\x2\xB1"+
		"\xB5\t\x5\x2\x2\xB2\xB4\t\x5\x2\x2\xB3\xB2\x3\x2\x2\x2\xB4\xB7\x3\x2\x2"+
		"\x2\xB5\xB3\x3\x2\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6:\x3\x2\x2\x2\xB7\xB5\x3"+
		"\x2\x2\x2\xB8\xB9\t\x6\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\xBB\b\x1E\x2\x2\xBB"+
		"<\x3\x2\x2\x2\n\x2sx~\x80\x8B\x91\xB5\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Lanugage.Content
